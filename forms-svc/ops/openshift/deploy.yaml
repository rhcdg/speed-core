---
kind: Template
apiVersion: v1
metadata:
  name: speed-forms-svc-deploy
  annotations:
    description:
    tags: speed
    template.openshift.io/bindable: 'false'
labels:
  template: speed-forms-svc-deploy
objects:

- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: ${DB_NAME}
    name: ${DB_NAME}
  spec:
    ports:
      - name: client
        port: ${{MONGO_PORT}}
        protocol: TCP
        targetPort: ${{MONGO_PORT}}
    selector:
      app: ${DB_NAME}
    sessionAffinity: None
    type: ClusterIP

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${DB_NAME}
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    name: ${DB_NAME}
    labels:
      app: ${DB_NAME}
  spec:
    replicas: 1
    selector:
      app: ${DB_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${DB_NAME}
      spec:
        containers:
        - image: " "
          name: mongo
          imagePullPolicy: Always
          ports:
            - containerPort: 27017
              protocol: TCP
          resources:
            limits:
              memory: ${MEMORY_LIMIT}
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: forms-svc-mongo
                  key: username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: forms-svc-mongo
                  key: password
            - name: MONGO_INITDB_DATABASE
              value: ${MOVIES_MONGO_DB}
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
    triggers:
    - imageChangeParams:
        automatic: false
        containerNames:
        - mongo
        from:
          kind: ImageStreamTag
          name: "speed-mongo:latest"
          namespace: "ci"
      type: ImageChange
    - type: ConfigChange

- kind: Service
  apiVersion: v1
  metadata:
    name: "${SVC_NAME}"
    annotations:
      description: Exposes and load balances the application pods
  spec:
    ports:
    - name: web
      port: 80
      targetPort: 8080
    selector:
      name: "${SVC_NAME}"

- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${SVC_NAME}"
    annotations:
      description: Defines how to deploy the application server
      template.alpha.openshift.io/wait-for-ready: 'true'
  spec:
    strategy:
      type: Recreate
    replicas: 1
    selector:
      name: "${SVC_NAME}"
    template:
      metadata:
        name: "${SVC_NAME}"
        labels:
          name: "${SVC_NAME}"
      spec:
        containers:
        - name: app
          image: " "
          imagePullPolicy: Always
          env:
            - name: MONGO_HOST
              value: ${MONGO_HOST}
            - name: MONGO_PORT
              value: ${MONGO_PORT}
            - name: MOVIES_MONGO_DB
              value: ${MOVIES_MONGO_DB}
            - name: MONGO_USERNAME
              valueFrom:
                secretKeyRef:
                  name: forms-svc-mongo
                  key: username
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: forms-svc-mongo
                  key: password
            - name: SPRING_PROFILES_ACTIVE
              value: ${SPRING_PROFILES_ACTIVE}
            - name: AWS_COGNITO_URL
              value: ${AWS_COGNITO_URL}
            - name: CASE_SERVICE_URI
              value: ${CASE_SERVICE_URI}
            - name: USPS_API
              value: ${USPS_API}
            - name: USPS_CLIENT_KEY
              value: ${USPS_CLIENT_KEY}
          ports:
          - containerPort: 8080
          readinessProbe:
            timeoutSeconds: 3
            initialDelaySeconds: 3
            httpGet:
              path: ${HEALTH_CHECK_ENDPOINT}
              port: 8080
          livenessProbe:
            timeoutSeconds: 3
            initialDelaySeconds: 30
            httpGet:
              path: ${HEALTH_CHECK_ENDPOINT}
              port: 8080
          resources:
            limits:
              memory: "${MEMORY_LIMIT}"

parameters:
- name: SVC_IMAGE_NAME
  displayName: Image name
  description: Name of docker image to deploy
  required: true
  value: ''
- name: SVC_NAME
  displayName: Microservice name
  description: The name assigned to all of the frontend objects defined in this template.
  required: true
  value: ''
- name: SVC_IMAGE_TAG
  displayName: Service Docker Image Tag
  description: Tag corresponding to environment
  required: true
  value: ''
- name: NAMESPACE
  displayName: Namespace
  description: The OpenShift Namespace where the ImageStream resides.
  required: true
  value: ''
- name: MEMORY_LIMIT
  displayName: Memory Limit
  description: Maximum amount of memory the Node.js container can use.
  required: true
  value: 1Gi
- name: APPLICATION_DOMAIN
  displayName: Application Hostname
  description: The exposed hostname that will route to the Node.js service, if left
    blank a value will be defaulted.
  value: ''
- description: Volume space available for data, e.g. 1Gi, 2Gi.
  displayName: Volume Capacity
  name: VOLUME_CAPACITY
  required: true
  value: 20Gi
- description: Mongo service name
  displayName: Mongo service name
  name: DB_NAME
  required: true
  value: ''
- description: Mongo Database
  displayName: Mongo Database
  name: MOVIES_MONGO_DB
  required: true
  value: "form"
- description: Mongo endpoint
  displayName: Mongo endpoint
  name: MONGO_HOST
  required: true
  value: ""
- description: Mongo port
  displayName: Mongo port
  name: MONGO_PORT
  required: true
  value: "27017"
- description: Spring active profile
  displayName: Spring active profile
  name: SPRING_PROFILES_ACTIVE
  required: true
  value: ""
- description: Health check endpoint
  displayName: Health check endpoint
  name: HEALTH_CHECK_ENDPOINT
  required: true
  value: "/actuator/health"
- description: Cases service uri
  displayName: Cases service uri
  name: CASE_SERVICE_URI
  required: true
  value: ""
- description: AWS Cognito OIDC URL
  displayName: AWS Cognito OIDC URL
  name: AWS_COGNITO_URL
- description: USPS Shipping API
  displayName: USPS Shipping API
  name: USPS_API
  required: true
  value: ""
- description: USPS Shipping API key
  displayName: USPS Shipping API key
  name: USPS_CLIENT_KEY
  required: true
  value: ""
